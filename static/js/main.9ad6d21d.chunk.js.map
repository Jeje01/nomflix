{"version":3,"sources":["assets/bgDefault.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ad6d21d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgDefault.87a0eb6a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size:16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    children:PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            🕒\r\n        </span>\r\n    </Container>\r\n);\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12pxl\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    height: 180px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position: center center;\r\n    transition:opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom:5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    opacity: 0;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image}{\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating}{\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;    \r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color:rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\n\r\nconst Poster = ({\r\n    id,\r\n    imageUrl,\r\n    title,\r\n    rating,\r\n    year,\r\n    isMovie=false\r\n}) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={\r\n                    imageUrl \r\n                    ? `https://image.tmdb.org/t/p/w300${imageUrl}` \r\n                    : require(\"../assets/bgDefault.png\")\r\n                }\r\n                 />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        ⭐\r\n                    </span>{\" \"}\r\n                    {rating} / 10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 20 ? `${title.substring(0, 20)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => (\r\n<>\r\n<Helmet>\r\n    <title>Movies | Nomflix</title>\r\n</Helmet>\r\n{loading? (\r\n    <Loader />\r\n    ) : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && \r\n        <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => ( \r\n            <Poster \r\n            key={movie.id}\r\n            id={movie.id}\r\n            title={movie.original_title} \r\n            imageUrl={movie.poster_path}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n            isMovie={true}\r\n            />\r\n            ))}\r\n        </Section>}\r\n        {upcoming && upcoming.length > 0 && \r\n        <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => ( \r\n            <Poster \r\n            key={movie.id}\r\n            id={movie.id}\r\n            title={movie.original_title} \r\n            imageUrl={movie.poster_path}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n            isMovie={true}\r\n            />\r\n            ))}\r\n        </Section>}\r\n        {popular && popular.length > 0 && \r\n        <Section title=\"Popular Movies\">\r\n            {popular.map(movie => (\r\n            <Poster \r\n            key={movie.id}\r\n            id={movie.id}\r\n            title={movie.original_title} \r\n            imageUrl={movie.poster_path}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n            isMovie={true}\r\n            />\r\n            ))}\r\n        </Section>\r\n        }\r\n        {error && <Message color=\"e74c3c\" text={error} />}\r\n    </Container>\r\n    )}\r\n</> \r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying:PropTypes.array,\r\n    popular:PropTypes.array,\r\n    upcoming:PropTypes.array,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"3290801bdd3d9df649ca3582d7d64517\",\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => \r\n    api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })  \r\n};","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {\r\n                data: {results: nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data: { results: upcoming }\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data: {results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            });\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find movie information.\"\r\n            });\r\n        } finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return (\r\n            <HomePresenter \r\n                nowPlaying = {nowPlaying} \r\n                upcoming={upcoming} \r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => \r\n<>\r\n<Helmet>\r\n    <title>TV Shows | Nomflix</title>\r\n</Helmet>\r\n{loading ? (\r\n    <Loader />\r\n) : (\r\n    <Container>\r\n        {topRated && topRated.length > 0 && \r\n        <Section title=\"Top Rated Shows\">\r\n            {topRated.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name} \r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                    />\r\n                )}\r\n        </Section>}\r\n        {popular && popular.length > 0 && \r\n        <Section title=\"Popular Shows\">\r\n            {popular.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name} \r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                    />\r\n                )}\r\n        </Section>}\r\n        {airingToday && airingToday.length > 0 && \r\n        <Section title=\"Airing Today\">\r\n            {airingToday.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name} \r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                    />\r\n                )}\r\n        </Section>}\r\n        {error && <Message color=\"e74c3c\" text={error} />}\r\n    </Container>\r\n    )}\r\n</>;\r\n\r\nTVPresenter.propTypes = {\r\n    topRated:PropTypes.array,\r\n    popular:PropTypes.array,\r\n    airingToday:PropTypes.array,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        topRated : null,\r\n        popular : null,\r\n        airingToday : null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {data: {results: topRated}} = await tvApi.topRated();\r\n            const {data: {results: popular}} = await tvApi.popular();\r\n            const {data: {results: airingToday}} = await tvApi.airingToday();\r\n            this.setState({topRated, popular, airingToday});\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            });\r\n        } finally{\r\n            this.setState({loading: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {topRated, popular, airingToday, loading, error} = this.state;\r\n        console.log(this.state);\r\n        return (\r\n        <TVPresenter \r\n            topRated={topRated} \r\n            popular={popular} \r\n            airingToday={airingToday} \r\n            loading={loading} \r\n            error={error}\r\n        />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color: white;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color:rgba(20, 20, 20, 0.8);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n`;\r\n\r\nconst Item =  styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom: 5px solid \r\n        ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n    transition:border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({location: {pathname}}) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname ===\"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults, \r\n    searchTerm, \r\n    loading, \r\n    handleSubmit, \r\n    error,\r\n    updateTerm\r\n}) => (\r\n<Container>\r\n    <Helmet>\r\n        <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input \r\n        placeholder=\"Search Movies or TV Shows...\" \r\n        value={searchTerm} \r\n        onChange={updateTerm}\r\n        />\r\n    </Form>\r\n    {loading ? (\r\n        <Loader />\r\n        ) : (\r\n        <>\r\n        {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n                {movieResults.map(movie => (\r\n                    <Poster \r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    title={movie.original_title} \r\n                    imageUrl={movie.poster_path}\r\n                    rating={movie.vote_average}\r\n                    year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                    isMovie={true}\r\n                    />\r\n                ))}\r\n            </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n                {tvResults.map(show => (\r\n                    <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name} \r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                    />\r\n                ))}\r\n            </Section>\r\n        )}\r\n        {error && <Message color=\"e74c3c\" text={error} />}\r\n        {tvResults \r\n        && movieResults \r\n        && tvResults.length === 0 \r\n        && <Message text=\"Nothing found\" color=\"#95a5a6\"/>}\r\n    </>\r\n        )}\r\n</Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults:PropTypes.array,\r\n    tvResults:PropTypes.array,\r\n    error:PropTypes.string,\r\n    searchTerm:PropTypes.string,\r\n    loading:PropTypes.bool.isRequired,\r\n    handleSubmit:PropTypes.func.isRequired,\r\n    updateTerm:PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport Message from \"../../Components/Message\";\r\nexport default class extends React.Component{\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.handleSubmit();\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        if(event){ \r\n            event.preventDefault()};\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !==\"\"){\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = event => {\r\n        const { target : {value} } = event;\r\n        console.log(value);\r\n        this.setState({\r\n            searchTerm: value\r\n        });\r\n    }\r\n\r\n    searchByTerm = async() => {\r\n        const { searchTerm } = this.state;\r\n        try{\r\n            const {data: {results: movieResults}} = await moviesApi.search(searchTerm);\r\n            const {data: {results: tvResults}} = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n            this.setState({ loading: true });\r\n        }catch{\r\n            this.setState({ error: \"Can't find results.\"});\r\n        }finally{\r\n            this.setState({ loading: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {movieResults, tvResults, searchTerm, loading, error} = this.state;\r\n        console.log(this.state);\r\n        return (\r\n        <SearchPresenter \r\n            movieResults={movieResults} \r\n            tvResults={tvResults} \r\n            searchTerm={searchTerm} \r\n            loading={loading} \r\n            error={error}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n        />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n    display: flex;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(2px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 10%;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 40%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n    box-shadow: 20px 20px 30px rgba(0, 0, 1, 0.7);\r\n\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 10%;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n    margin-bottom: 10px;\r\n    \r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin:20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0px 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 17px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 60%;\r\n`;\r\n\r\n\r\nconst DetailPresenter = ({result, loading, error}) => \r\n    loading ? (\r\n        <>\r\n        <Helmet>\r\n            <title>Loading | Nomflix</title>\r\n        </Helmet>\r\n        <Loader/>\r\n        </>\r\n    ) : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>\r\n                {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n                | Nomflix\r\n            </title>\r\n        </Helmet>\r\n        <Backdrop \r\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} \r\n        />\r\n        <Content>\r\n            <Cover bgImage={result.poster_path \r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}` \r\n                : require(\"../../assets/bgDefault.png\")}\r\n            />\r\n            <Data>\r\n                <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                <ItemContainer>\r\n                    <Item>\r\n                    {result.release_date \r\n                    ? result.release_date.substring(0, 4) \r\n                    : result.first_air_date.substring(0, 4)}\r\n                    </Item>\r\n                    <Divider>·</Divider>\r\n                    <Item>\r\n                    {result.runtime \r\n                    ? result.runtime \r\n                    : result.episode_run_time[0]} min\r\n                    </Item>\r\n                    <Divider>·</Divider>\r\n                    <Item>\r\n                    {result.genres && \r\n                        result.genres.map((genre, index) => \r\n                        index === result.genres.length-1 \r\n                        ? genre.name \r\n                        : `${genre.name} / `\r\n                        )}\r\n                    </Item>\r\n                </ItemContainer>\r\n                <Overview>{result.overview}</Overview>\r\n            </Data>\r\n        </Content>\r\n    </Container>    \r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { tvApi, moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {location: {pathname}} = props;\r\n        this.state = {\r\n            result: null,\r\n            loading: true,\r\n            error: null,\r\n            isMovie: pathname.includes(\"/movie/\")      \r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const {\r\n            match: {\r\n                params: {id}\r\n            },\r\n            history: {push}\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parsedId = parseInt(id);\r\n        if(isNaN(parsedId)){\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try{\r\n            if(isMovie){\r\n                ({data: result} = await moviesApi.movieDetail(parsedId));   \r\n            } else{\r\n                ({data: result} = await tvApi.showDetail(parsedId));\r\n            }\r\n            console.log(result);\r\n        } catch {\r\n            this.setState({error: \"Can't find anything.\"});\r\n        } finally {\r\n            this.setState({loading: false, result});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const {result, loading, error} = this.state;\r\n        return (\r\n        <DetailPresenter \r\n            result={result}\r\n            loading={loading} \r\n            error={error}\r\n        />);\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\n\r\nexport default () => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/tv\" exact component={TV} />\r\n            <Route path=\"/search\" component={Search} />\r\n            <Route path=\"/movie/:id\" component={Detail} />\r\n            <Route path=\"/show/:id\" component={Detail} />\r\n            <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n    </Router>\r\n);","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, {Component} from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component{\n  render(){\n    return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}